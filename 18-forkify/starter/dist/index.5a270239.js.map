{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,e,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,W,E,Q,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,E,S,Q,S,C,C,C,ECAA,a,E,E,Q,W,I,E,A,G,E,G,E,E,Q,U,I,E,A,G,E,GAEA,IAcA,EACA,EAfI,EAAU,CAAC,EAcf,EAbA,SAAkB,CAAK,EAErB,IAAK,IADD,EAAO,OAAO,KAAK,GACd,EAAI,EAAG,EAAI,EAAK,OAAQ,IAC/B,CAAO,CAAC,CAAI,CAAC,EAAE,CAAC,CAAG,CAAK,CAAC,CAAI,CAAC,EAAE,CAAC,AAErC,EASA,EARA,SAAiB,CAAE,EACjB,IAAI,EAAW,CAAO,CAAC,EAAG,CAC1B,GAAI,AAAY,MAAZ,EACF,MAAM,AAAI,MAAM,oCAAsC,GAExD,OAAO,CACT,C,GCfA,AAAA,EAAA,SAAA,SAA8C,KAAK,MAAM,iGGElD,MAAM,EAAU,oDAGV,EAAM,uCCMN,EAAO,eAAgB,CAAG,CAAE,CAAsB,EAC7D,GAAI,CACF,IAAM,EAAW,EACb,MAAM,EAAK,CACT,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,EACvB,GACA,MAAM,GAKJ,EAAM,MAAM,QAAQ,KAAK,CAAC,EAvB3B,IAAI,QAAQ,SAAU,CAAC,CAAE,CAAM,EACpC,WAAW,WACT,EAAO,AAAI,MAAM,kDACnB,EAAG,IACL,GAmBqE,EAE7D,EAAO,MAAM,EAAI,OAGvB,GAAI,CAAC,EAAI,GAAI,MAAM,AAAI,MAAM,CAAC,EAAE,EAAK,QAAQ,EAAE,EAAE,EAAI,OAAO,CAAC,CAAC,EAI9D,OAAO,CACT,CAAE,MAAO,EAAK,CAEZ,MAAM,CACR,CACF,EFpCa,EAAQ,CACn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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d3c6714a85c3593f.js","src/js/controller.js","src/js/model.js","src/js/config.js","src/js/helpers.js","src/js/views/recipeView.js","src/js/views/View.js","node_modules/@parcel/runtime-js/lib/runtime-786e1fe4b788c342.js","src/js/views/searchView.js","src/js/views/resultsView.js","src/js/views/previewView.js","src/js/views/paginationView.js","src/js/views/bookmarksView.js","src/js/views/addRecipeView.js"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire3a11\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire3a11\"] = parcelRequire;\n}\nparcelRequire.register(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\n$parcel$export(module.exports, \"resolve\", () => $18c11f3350a906ea$export$f7ad0328861e2f03, (v) => $18c11f3350a906ea$export$f7ad0328861e2f03 = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = {};\nfunction $18c11f3350a906ea$var$register(pairs) {\n    var keys = Object.keys(pairs);\n    for(var i = 0; i < keys.length; i++)$18c11f3350a906ea$var$mapping[keys[i]] = pairs[keys[i]];\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping[id];\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return resolved;\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $710c3e3603fd2255$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(JSON.parse('{\"f9fpV\":\"index.5a270239.js\",\"eyyUD\":\"icons.c14567a0.svg\"}'));\n\n// vars to be used across all files regarding applicaton itself\nconst $ba30e20475feac5a$export$923ea8233b386e99 = \"https://forkify-api.herokuapp.com/api/v2/recipes/\";\nconst $ba30e20475feac5a$export$9bec5134f7f38b3a = 10;\nconst $ba30e20475feac5a$export$5feaddb1377b7f5e = 10;\nconst $ba30e20475feac5a$export$7167c830cefcb6b5 = \"b9709f71-c57a-4a96-9c67-2c3e84585f16\";\n\n\n\nconst $bd02c871d9c5ba8e$var$timeout = function(s) {\n    return new Promise(function(_, reject) {\n        setTimeout(function() {\n            reject(new Error(`Request took too long! Timeout after ${s} second`));\n        }, s * 1000);\n    });\n};\nconst $bd02c871d9c5ba8e$export$2b3ff41fecbef7c8 = async function(url, uploadData) {\n    try {\n        const fetchPro = uploadData ? fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(uploadData)\n        }) : fetch(url);\n        // the fetch will return a promis as per normal\n        // we can then await the result of the promise\n        // using Promise.race to see which promise (fetch or timeout) wins the race 1st\n        const res = await Promise.race([\n            fetchPro,\n            $bd02c871d9c5ba8e$var$timeout((0, $ba30e20475feac5a$export$9bec5134f7f38b3a))\n        ]);\n        // convert the res obj from the returned fetch to json and this will return a promise then await on that\n        const data = await res.json();\n        // if false - grab the msg from the data - will be passed to the catch err handler\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n        // instead of returning a prmoise from this async fn, we need to return the data as the value\n        // this will be the 'resolved' VALUE of the promise that the getJSON() returns - not the promise itself\n        return data;\n    } catch (err) {\n        // pass the err down to model.js not here\n        throw err;\n    }\n};\n\n\nconst $0f1d4402dffacf5b$export$ca000e230c0caa3e = {\n    recipe: {},\n    search: {\n        // start of as defaults\n        query: \"\",\n        results: [],\n        page: 1,\n        resultsPerPage: (0, $ba30e20475feac5a$export$5feaddb1377b7f5e)\n    },\n    bookmarks: []\n};\nconst $0f1d4402dffacf5b$var$createRecipeObject = function(data) {\n    // detructure into recipe from data.data\n    const { recipe: recipe  } = data.data;\n    // re-build the recipe obj into state.recipe obj (our live state) from recipe to get rid of props with _\n    return {\n        id: recipe.id,\n        title: recipe.title,\n        publisher: recipe.publisher,\n        sourceUrl: recipe.source_url,\n        image: recipe.image_url,\n        servings: recipe.servings,\n        cookingTime: recipe.cooking_time,\n        ingredients: recipe.ingredients,\n        ...recipe.key && {\n            key: recipe.key\n        }\n    };\n};\nconst $0f1d4402dffacf5b$export$b96725c7a035d60b = async function(id) {\n    try {\n        // this will be the 'resolved' VALUE becasue we are returning the data from the async AJAX()\n        const data = await (0, $bd02c871d9c5ba8e$export$2b3ff41fecbef7c8)(`${(0, $ba30e20475feac5a$export$923ea8233b386e99)}${id}?key=${(0, $ba30e20475feac5a$export$7167c830cefcb6b5)}`);\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe = $0f1d4402dffacf5b$var$createRecipeObject(data);\n        // if any of the bookedmarked recipe id === id\n        if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks.some((RecipeBookmarked)=>RecipeBookmarked.id === id)) $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.bookmarked = true;\n        else $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.bookmarked = false;\n    } catch (err) {\n        // need to re-throw err so it can get sent down to controller recipeView.renderError(); in the catch block of controlRecipes so it can be presented in the view\n        throw err;\n    }\n};\nconst $0f1d4402dffacf5b$export$202b8e5cb363a0c4 = async function(qry) {\n    // called by the controller - will tell this function what to search for\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.search.query = qry;\n    try {\n        const data = await (0, $bd02c871d9c5ba8e$export$2b3ff41fecbef7c8)(`${(0, $ba30e20475feac5a$export$923ea8233b386e99)}?search=${qry}&key=${(0, $ba30e20475feac5a$export$7167c830cefcb6b5)}`);\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.search.results = data.data.recipes.map((rec)=>{\n            return {\n                id: rec.id,\n                title: rec.title,\n                publisher: rec.publisher,\n                image: rec.image_url,\n                ...rec.key && {\n                    key: rec.key\n                }\n            };\n        });\n        // after a new search always re-set the page btns back to page 1\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.search.page = 1;\n    } catch (err) {\n        throw err;\n    }\n};\nconst $0f1d4402dffacf5b$export$8d7f79465139ab72 = function(page = $0f1d4402dffacf5b$export$ca000e230c0caa3e.search.page) {\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.search.page = page;\n    // 10 is the amount we want to show\n    // if we requested page 1, 1-1=0 so 0*10=0..... so start will now be 0\n    const start = (page - 1) * $0f1d4402dffacf5b$export$ca000e230c0caa3e.search.resultsPerPage; //0;\n    // if we requested page 1, 1*10=10, slice will take 9\n    const end = page * $0f1d4402dffacf5b$export$ca000e230c0caa3e.search.resultsPerPage; //9;\n    return $0f1d4402dffacf5b$export$ca000e230c0caa3e.search.results.slice(start, end);\n// if page is 2, 2-1=1*10=10.........start is 10\n// 2*10= 20... end 20\n};\nconst $0f1d4402dffacf5b$export$5e23f4642ecad5ea = function(newServings) {\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.ingredients.forEach((ing)=>{\n        ing.quantity = ing.quantity * newServings / $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.servings;\n    });\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.servings = newServings;\n};\nconst $0f1d4402dffacf5b$var$persistBookmarks = function() {\n    localStorage.setItem(\"bookmarks\", JSON.stringify($0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks));\n};\nconst $0f1d4402dffacf5b$export$9810234b614cab40 = function(recipe) {\n    // add bookmarks\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks.push(recipe);\n    // mark current recipe as bookmark: set new prop on state\n    if (recipe.id === $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.id) $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.bookmarked = true;\n    $0f1d4402dffacf5b$var$persistBookmarks();\n};\nconst $0f1d4402dffacf5b$export$136048bcb9946c75 = function(id) {\n    // loop over and find the index with the id\n    const index = $0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks.findIndex((el)=>el.id === id);\n    // delete 1 from this index\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks.splice(index, 1);\n    // mark current recipe as un-bookmark: set new prop on state\n    if (id === $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.id) $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.bookmarked = false;\n    $0f1d4402dffacf5b$var$persistBookmarks();\n};\nconst $0f1d4402dffacf5b$var$init = function() {\n    const storage = localStorage.getItem(\"bookmarks\");\n    if (storage) $0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks = JSON.parse(storage);\n};\nconst $0f1d4402dffacf5b$var$clearBookmarks = function() {\n    localStorage.clear(\"bookmarks\");\n};\n//clearBookmarks();\n$0f1d4402dffacf5b$var$init();\nconst $0f1d4402dffacf5b$export$d660c2254e74960d = async function(newRecipe) {\n    try {\n        const ingredients = Object.entries(newRecipe).filter((entry)=>entry[0].startsWith(\"ingredient\") && entry[1] !== \"\").map((ing)=>{\n            const ingArr = ing[1].split(\",\").map((el)=>el.trim());\n            if (ingArr.length !== 3) throw new Error(\"ingredient format incorrect\");\n            const [quantity, unit, description] = ingArr;\n            return {\n                quantity: quantity ? +quantity : null,\n                unit: unit,\n                description: description\n            };\n        });\n        const recipe = {\n            title: newRecipe.title,\n            source_url: newRecipe.sourceUrl,\n            image_url: newRecipe.image,\n            publisher: newRecipe.publisher,\n            cooking_time: +newRecipe.cookingTime,\n            servings: +newRecipe.servings,\n            ingredients: ingredients\n        };\n        const data = await (0, $bd02c871d9c5ba8e$export$2b3ff41fecbef7c8)(`${(0, $ba30e20475feac5a$export$923ea8233b386e99)}?key=${(0, $ba30e20475feac5a$export$7167c830cefcb6b5)}`, recipe);\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe = $0f1d4402dffacf5b$var$createRecipeObject(data);\n        $0f1d4402dffacf5b$export$9810234b614cab40($0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe);\n    } catch (err) {\n        // re throw it so it propagate up to when returning the await on uploadRecipe\n        throw err;\n    }\n};\n\n\nvar $d981731ada74638f$exports = {};\n\n$d981731ada74638f$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"eyyUD\"), import.meta.url).toString();\n\n\nclass $3a07c34e115c11c9$export$2e2bcd8739ae039 {\n    _data;\n    render(data, render = true) {\n        // if no data or if data is array && array is empty\n        if (!data || Array.isArray(data) && data.length === 0) return this.renderError();\n        this._data = data;\n        const markup = this._generateMarkup();\n        if (!render) return markup;\n        this._clear();\n        // afterbegin = first child recipeContainer div\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n    }\n    update(data) {\n        this._data = data;\n        // GENRATE NEW MARKUP BUT NOT RENDER IT, COMPARE NEW HTML TO CUR HTML\n        // CHANGE TEXT AND ATTRIBUTES THAT HAVE CHNAGED FROM OLD TO NEW VERSION\n        const newMarkup = this._generateMarkup();\n        // convert string to DOM obj (living in memory) then we can use to compare to the actual DOM on the page\n        // newDom = virtual DOM\n        const newDom = document.createRange().createContextualFragment(newMarkup);\n        const newElements = Array.from(newDom.querySelectorAll(\"*\"));\n        const curElements = Array.from(this._parentElement.querySelectorAll(\"*\"));\n        newElements.forEach((newEl, i)=>{\n            const curEl = curElements[i];\n            // chnage the text\n            if (!newEl.isEqualNode(curEl) && newEl.firstChild?.nodeValue.trim() !== \"\") curEl.textContent = newEl.textContent;\n            // change the attr\n            if (!newEl.isEqualNode(curEl)) Array.from(newEl.attributes).forEach((attr)=>curEl.setAttribute(attr.name, attr.value));\n        });\n    }\n    _clear() {\n        // empty the recipeContainer div\n        this._parentElement.innerHTML = \"\";\n    }\n    // ## render a spinner for an async task\n    renderSpinner() {\n        const markup = `\r\n    <div class=\"spinner\">\r\n      <svg>\r\n        <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports)))}#icon-loader\"></use>\r\n      </svg>\r\n    </div>\r\n    `;\n        this._clear();\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n    }\n    renderError(msg = this._errorMsg) {\n        const markup = `\r\n        <div class=\"error\">\r\n            <div>\r\n            <svg>\r\n                <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports)))}#icon-alert-triangle\"></use>\r\n            </svg>\r\n            </div>\r\n            <p>${msg}</p>\r\n        </div>\r\n        `;\n        this._clear();\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n    }\n    renderMsg(msg = this._msg) {\n        const markup = `\r\n        <div class=\"message\">\r\n            <div>\r\n            <svg>\r\n                <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports)))}#icon-alert-smile\"></use>\r\n            </svg>\r\n            </div>\r\n            <p>${msg}</p>\r\n        </div>\r\n        `;\n        this._clear();\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n    }\n}\n\n\n\nclass $d14dc0f178617192$var$RecipeView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    _parentElement = document.querySelector(\".recipe\");\n    _errorMsg = \"Could not find recipe, please try again\";\n    _msg = \"\";\n    addHandlerRender(handler) {\n        // handler == controlRecipes fron controller\n        [\n            \"hashchange\",\n            \"load\"\n        ].forEach((event)=>window.addEventListener(event, handler));\n    //window.addEventListener('hashchange', handler);\n    //window.addEventListener('load', handler);\n    }\n    addHandlerUpdateServings(handler) {\n        this._parentElement.addEventListener(\"click\", function(e) {\n            const btn = e.target.closest(\".btn--update-servings\");\n            if (!btn) return;\n            const { updateTo: updateTo  } = btn.dataset;\n            if (+updateTo > 0) handler(+updateTo);\n        });\n    }\n    addHandlerBookmark(handler) {\n        this._parentElement.addEventListener(\"click\", function(e) {\n            // listen to event on the parent el\n            const btn = e.target.closest(\".btn--bookmark\");\n            if (!btn) return;\n            handler();\n        });\n    }\n    _generateMarkup() {\n        return `\r\n      <figure class=\"recipe__fig\">\r\n        <img src=\"${this._data.image}\" alt=\"${this._data.title}\" class=\"recipe__img\" />\r\n        <h1 class=\"recipe__title\">\r\n          <span>${this._data.title}</span>\r\n        </h1>\r\n      </figure>\r\n\r\n      <div class=\"recipe__details\">\r\n        <div class=\"recipe__info\">\r\n          <svg class=\"recipe__info-icon\">\r\n            <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-clock\"></use>\r\n          </svg>\r\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${this._data.cookingTime}</span>\r\n          <span class=\"recipe__info-text\">minutes</span>\r\n        </div>\r\n        <div class=\"recipe__info\">\r\n          <svg class=\"recipe__info-icon\">\r\n            <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-users\"></use>\r\n          </svg>\r\n          <span class=\"recipe__info-data recipe__info-data--people\">${this._data.servings}</span>\r\n          <span class=\"recipe__info-text\">servings</span>\r\n\r\n          <div class=\"recipe__info-buttons\">\r\n            <button class=\"btn--tiny btn--update-servings\" data-update-to=\"${this._data.servings - 1}\">\r\n              <svg>\r\n                <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-minus-circle\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn--tiny btn--update-servings\" data-update-to=\"${this._data.servings + 1}\">\r\n              <svg>\r\n                <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-plus-circle\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"recipe__user-generated ${this._data.key ? \"\" : \" hidden\"}\">\r\n          <svg>\r\n            <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-user\"></use>\r\n          </svg>\r\n        </div>\r\n        <button class=\"btn--round btn--bookmark\">\r\n          <svg class=\"\">\r\n            <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-bookmark${this._data.bookmarked ? \"-fill\" : \"\"}\"></use>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"recipe__ingredients\">\r\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\r\n        <ul class=\"recipe__ingredient-list\">\r\n            ${this._data.ingredients.map(this._generateMarkupIngredient).join(\"\")}\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"recipe__directions\">\r\n        <h2 class=\"heading--2\">How to cook it</h2>\r\n        <p class=\"recipe__directions-text\">\r\n          This recipe was carefully designed and tested by\r\n          <span class=\"recipe__publisher\">${this._data.publisher}</span>. Please check out\r\n          directions at their website.\r\n        </p>\r\n        <a\r\n          class=\"btn--small recipe__btn\"\r\n          href=\"${this._data.sourceUrl}\"\r\n          target=\"_blank\"\r\n        >\r\n          <span>Directions</span>\r\n          <svg class=\"search__icon\">\r\n            <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-arrow-right\"></use>\r\n          </svg>\r\n        </a>\r\n      </div>\r\n    `;\n    }\n    _generateMarkupIngredient(ing) {\n        // generateMarkupIngredient is a callback passed to the map method\n        // map normally takes (el,c,arr) in this case just the el\n        // this._data.ingredients is an array of objs\n        // we need to return a string of html for this ingredient section\n        // map in this case will return the same length array\n        // in each elemet which is a obj is ing will now be one of these li's\n        // from the result of the map (an array) we then join them in one big html string\n        return `\r\n          <li class=\"recipe__ingredient\">\r\n            <svg class=\"recipe__icon\">\r\n              <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-check\"></use>\r\n            </svg>\r\n            <div class=\"recipe__quantity\">${ing.quantity ? ing.quantity : \"\"}</div>\r\n            <div class=\"recipe__description\">\r\n              <span class=\"recipe__unit\">${ing.unit}</span>\r\n              ${ing.description}\r\n            </div>\r\n          </li>\r\n          `;\n    }\n}\nvar $d14dc0f178617192$export$2e2bcd8739ae039 = new $d14dc0f178617192$var$RecipeView();\n\n\nclass $813cf99795e9ec97$var$SearchView {\n    // .search is the form\n    _parentElement = document.querySelector(\".search\");\n    getQuery() {\n        const query = this._parentElement.querySelector(\".search__field\").value;\n        this._clearInput();\n        return query;\n    }\n    _clearInput() {\n        return this._parentElement.querySelector(\".search__field\").value = \"\";\n    }\n    addHandlerSearch(handler) {\n        // user clicks submit btn or submits form\n        this._parentElement.addEventListener(\"submit\", function(e) {\n            e.preventDefault();\n            handler();\n        });\n    }\n}\nvar $813cf99795e9ec97$export$2e2bcd8739ae039 = new $813cf99795e9ec97$var$SearchView();\n\n\n\n\n\nclass $a68ceb92eae160df$var$PreviewView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    _parentElement = \"\";\n    _generateMarkup(result) {\n        // 1st el after the hash\n        const id = window.location.hash.slice(1);\n        return `\r\n    <li class=\"preview\">\r\n        <a class=\"preview__link\" ${this._data.id === id ? \"preview__link--active\" : \"\"} href=\"#${this._data.id}\">\r\n        <figure class=\"preview__fig\">\r\n            <img src=\"${this._data.image}\" alt=\"${this._data.title}\" />\r\n        </figure>\r\n        <div class=\"preview__data\">\r\n            <h4 class=\"preview__title\">${this._data.title}</h4>\r\n            <p class=\"preview__publisher\">${this._data.publisher}</p>\r\n            <div class=\"preview__user-generated ${this._data.key ? \"\" : \" hidden\"}\">\r\n              <svg>\r\n                <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-user\"></use>\r\n              </svg>\r\n            </div>\r\n        </div>\r\n        </a>\r\n    </li>\r\n    `;\n    }\n}\nvar // this way there can only be 1 results view and then imported into controller\n$a68ceb92eae160df$export$2e2bcd8739ae039 = new $a68ceb92eae160df$var$PreviewView();\n\n\n\nclass $dddbd0b30676c4ae$var$ResultsView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    _parentElement = document.querySelector(\".results\");\n    _errorMsg = \"No recipes found\";\n    _msg = \"\";\n    _generateMarkup() {\n        return this._data.map((result)=>(0, $a68ceb92eae160df$export$2e2bcd8739ae039).render(result, false)).join(\"\");\n    }\n}\nvar // this way there can only be 1 results view and then imported into controller\n$dddbd0b30676c4ae$export$2e2bcd8739ae039 = new $dddbd0b30676c4ae$var$ResultsView();\n\n\n\n\nclass $cfa940594ee109f7$var$PaginationView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    _parentElement = document.querySelector(\".pagination\");\n    addHandlerClick(handler) {\n        this._parentElement.addEventListener(\"click\", function(e) {\n            // figure out which btn was clisked using event delegation\n            // select the closest btn element to the clicked element\n            // closest() works like querySelecter but searches up in the tree, looks for parents\n            // becuase we might click on the span, svg or the use that's within the button\n            const btn = e.target.closest(\".btn--inline\");\n            if (!btn) return; // if we click in the div .pagination\n            const goToPage = +btn.dataset.goto;\n            handler(goToPage);\n        });\n    }\n    _generateMarkup() {\n        const curPage = this._data.page;\n        // number of pages\n        const numPages = Math.ceil(// e.g 60 arrays / by 10 = 6 pages\n        this._data.results.length / this._data.resultsPerPage);\n        // if we are on page 1, and there are OTHER pages >\n        if (curPage === 1 && numPages > 1) return `\r\n        <button data-goto=\"${curPage + 1}\" class=\"btn--inline pagination__btn--next\">\r\n            <span>Page ${curPage + 1}</span>\r\n            <svg class=\"search__icon\">\r\n                <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-arrow-right\"></use>\r\n            </svg>\r\n        </button>\r\n        `;\n        // if we are on last page\n        if (curPage === numPages && numPages > 1) return `\r\n        <button data-goto=\"${curPage - 1}\" class=\"btn--inline pagination__btn--prev\">\r\n            <svg class=\"search__icon\">\r\n            <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-arrow-left\"></use>\r\n            </svg>\r\n            <span>Page ${curPage - 1}</span>\r\n        </button>\r\n        `;\n        // other page\n        if (curPage < numPages) return `\r\n        <button data-goto=\"${curPage - 1}\" class=\"btn--inline pagination__btn--prev\">\r\n            <svg class=\"search__icon\">\r\n            <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-arrow-left\"></use>\r\n            </svg>\r\n            <span>Page ${curPage - 1}</span>\r\n        </button>\r\n        <button data-goto=\"${curPage + 1}\" class=\"btn--inline pagination__btn--next\">\r\n            <span>Page ${curPage + 1}</span>\r\n            <svg class=\"search__icon\">\r\n                <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($d981731ada74638f$exports))}#icon-arrow-right\"></use>\r\n            </svg>\r\n        </button>\r\n        `;\n        // page 1, and there are NO other pages\n        return \"\";\n    }\n}\nvar $cfa940594ee109f7$export$2e2bcd8739ae039 = new $cfa940594ee109f7$var$PaginationView();\n\n\n\n\n\nclass $5d1bb7e064b2cbd1$var$BookmarksView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    _parentElement = document.querySelector(\".bookmarks__list\");\n    _errorMsg = \"No bookmarks yet\";\n    _msg = \"\";\n    addHandlerRender(handler) {\n        window.addEventListener(\"load\", handler);\n    }\n    _generateMarkup() {\n        return this._data.map((bookmark)=>(0, $a68ceb92eae160df$export$2e2bcd8739ae039).render(bookmark, false)).join(\"\");\n    }\n}\nvar // this way there can only be 1 results view and then imported into controller\n$5d1bb7e064b2cbd1$export$2e2bcd8739ae039 = new $5d1bb7e064b2cbd1$var$BookmarksView();\n\n\n\n\nclass $e5dc5dc5ede8bdf4$var$AddRecipeView extends (0, $3a07c34e115c11c9$export$2e2bcd8739ae039) {\n    _parentElement = document.querySelector(\".upload\");\n    _msg = \"Recipe added\";\n    _window = document.querySelector(\".add-recipe-window\");\n    _overlay = document.querySelector(\".overlay\");\n    _btnOpen = document.querySelector(\".nav__btn--add-recipe\");\n    _btnClose = document.querySelector(\".btn--close-modal\");\n    // call _addHandlerShowWindow soon as we instatiate this class\n    constructor(){\n        super();\n        this._addHandlerShowWindow();\n        this._addHandlerHideWindow();\n    }\n    toggleWindow() {\n        this._overlay.classList.toggle(\"hidden\");\n        this._window.classList.toggle(\"hidden\");\n    }\n    _addHandlerShowWindow() {\n        this._btnOpen.addEventListener(\"click\", this.toggleWindow.bind(this));\n    }\n    _addHandlerHideWindow() {\n        this._btnClose.addEventListener(\"click\", this.toggleWindow.bind(this));\n        this._overlay.addEventListener(\"click\", this.toggleWindow.bind(this));\n    }\n    addHandlerUpload(handler) {\n        this._parentElement.addEventListener(\"submit\", function(e) {\n            e.preventDefault();\n            // the this keyword points to the form event handler\n            const dataArr = [\n                ...new FormData(this)\n            ];\n            // ES 2019 convert the FormData to an obj\n            const dataObj = Object.fromEntries(dataArr);\n            handler(dataObj);\n        });\n    }\n    _generateMarkup() {}\n}\nvar $e5dc5dc5ede8bdf4$export$2e2bcd8739ae039 = new $e5dc5dc5ede8bdf4$var$AddRecipeView();\n\n\n// ## GET A RECIPE\n// async fn will not block the stack/thread, they will run in the background\nconst $f50bd1f2915ed0f2$var$controlRecipes = async function() {\n    try {\n        // from the entire url get the hash id and remove the # using slice\n        const id = window.location.hash.slice(1);\n        // stop execution of controlRecipes() bom out\n        if (!id) return;\n        // show holding spinner where we'd show the recipe section\n        (0, $d14dc0f178617192$export$2e2bcd8739ae039).renderSpinner();\n        // update results view to mark selected recipe\n        (0, $dddbd0b30676c4ae$export$2e2bcd8739ae039).update($0f1d4402dffacf5b$export$8d7f79465139ab72());\n        (0, $5d1bb7e064b2cbd1$export$2e2bcd8739ae039).update($0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks);\n        // loadRecipe = async fn\n        await $0f1d4402dffacf5b$export$b96725c7a035d60b(id);\n        // pass the live state genrated from loadRecipe()\n        (0, $d14dc0f178617192$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe);\n    } catch (err) {\n        // the controller will be the link between the errors from the model to the view for loadRecipe() if failed just above\n        (0, $d14dc0f178617192$export$2e2bcd8739ae039).renderError();\n    }\n};\nconst $f50bd1f2915ed0f2$var$controlSearchResults = async function() {\n    try {\n        (0, $dddbd0b30676c4ae$export$2e2bcd8739ae039).renderSpinner();\n        // get search query\n        const query = (0, $813cf99795e9ec97$export$2e2bcd8739ae039).getQuery();\n        if (!query) return;\n        // store data in to the state\n        await $0f1d4402dffacf5b$export$202b8e5cb363a0c4(query);\n        // render results\n        (0, $dddbd0b30676c4ae$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$8d7f79465139ab72());\n        // render initial pagination btns\n        (0, $cfa940594ee109f7$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.search);\n    } catch (err) {\n        console.log(err);\n    }\n};\nconst $f50bd1f2915ed0f2$var$controlPagination = function(goToPage) {\n    // render NEW results\n    (0, $dddbd0b30676c4ae$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$8d7f79465139ab72(goToPage));\n    // render NEW btns\n    (0, $cfa940594ee109f7$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.search);\n};\nconst $f50bd1f2915ed0f2$var$controlServings = function(newServings) {\n    // update the recipe servings (in state)\n    $0f1d4402dffacf5b$export$5e23f4642ecad5ea(newServings);\n    // update the recipe view\n    (0, $d14dc0f178617192$export$2e2bcd8739ae039).update($0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe);\n};\nconst $f50bd1f2915ed0f2$var$controlBookmark = function() {\n    // we have not yet bookmarked into our state\n    if (!$0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.bookmarked) $0f1d4402dffacf5b$export$9810234b614cab40($0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe);\n    else $0f1d4402dffacf5b$export$136048bcb9946c75($0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.id);\n    (0, $d14dc0f178617192$export$2e2bcd8739ae039).update($0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe);\n    (0, $5d1bb7e064b2cbd1$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks);\n};\nconst $f50bd1f2915ed0f2$var$controlBookmarks = function() {\n    // when the page re-loads check for bookmarks\n    (0, $5d1bb7e064b2cbd1$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks);\n};\nconst $f50bd1f2915ed0f2$var$controlAddRecipe = async function(newRecipe) {\n    try {\n        (0, $e5dc5dc5ede8bdf4$export$2e2bcd8739ae039).renderSpinner();\n        await $0f1d4402dffacf5b$export$d660c2254e74960d(newRecipe);\n        console.log($0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe);\n        (0, $d14dc0f178617192$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe);\n        (0, $e5dc5dc5ede8bdf4$export$2e2bcd8739ae039).renderMsg();\n        (0, $5d1bb7e064b2cbd1$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.bookmarks);\n        window.history.pushState(null, \"\", `#${$0f1d4402dffacf5b$export$ca000e230c0caa3e.recipe.id}`);\n        setTimeout(function() {\n            (0, $e5dc5dc5ede8bdf4$export$2e2bcd8739ae039).toggleWindow();\n        }, 2500);\n    } catch (err) {\n        (0, $e5dc5dc5ede8bdf4$export$2e2bcd8739ae039).renderError(err.message);\n    }\n};\n// start program\nconst $f50bd1f2915ed0f2$var$init = function() {\n    // run addHandlerRender\n    // Event Handlers in MVC: Publisher-Subscriber Pattern - pass the Subscriber to the publisher\n    // Subscriber = controlRecipes - IN THE CONTROLLER\n    // Publisher = addHandlerRender - IN THE VIEW\n    (0, $5d1bb7e064b2cbd1$export$2e2bcd8739ae039).addHandlerRender($f50bd1f2915ed0f2$var$controlBookmarks);\n    (0, $d14dc0f178617192$export$2e2bcd8739ae039).addHandlerRender($f50bd1f2915ed0f2$var$controlRecipes);\n    (0, $d14dc0f178617192$export$2e2bcd8739ae039).addHandlerUpdateServings($f50bd1f2915ed0f2$var$controlServings);\n    (0, $d14dc0f178617192$export$2e2bcd8739ae039).addHandlerBookmark($f50bd1f2915ed0f2$var$controlBookmark);\n    (0, $813cf99795e9ec97$export$2e2bcd8739ae039).addHandlerSearch($f50bd1f2915ed0f2$var$controlSearchResults);\n    (0, $cfa940594ee109f7$export$2e2bcd8739ae039).addHandlerClick($f50bd1f2915ed0f2$var$controlPagination);\n    (0, $e5dc5dc5ede8bdf4$export$2e2bcd8739ae039).addHandlerUpload($f50bd1f2915ed0f2$var$controlAddRecipe);\n// In english - execute these fn's on startup that live in the views and pass in these controller functions.\n// When they are executed in the view, they will have in them event listeners that will then take on the controller function that we passed in... on an event, call this controller function = handler\n};\n$f50bd1f2915ed0f2$var$init();\n\n\n//# sourceMappingURL=index.5a270239.js.map\n","\"use strict\";\n\nvar mapping = {};\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping[id];\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return resolved;\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"f9fpV\\\":\\\"index.5a270239.js\\\",\\\"eyyUD\\\":\\\"icons.c14567a0.svg\\\"}\"));","import * as model from './model.js';\nimport recipeView from './views/recipeView.js';\nimport searchView from './views/searchView.js';\nimport resultsView from './views/resultsView.js';\nimport paginationView from './views/paginationView.js';\nimport bookmarksView from './views/bookmarksView.js';\nimport addRecipeView from './views/addRecipeView.js';\n\n// ## GET A RECIPE\n// async fn will not block the stack/thread, they will run in the background\nconst controlRecipes = async function () {\n  try {\n    // from the entire url get the hash id and remove the # using slice\n    const id = window.location.hash.slice(1);\n\n    // stop execution of controlRecipes() bom out\n    if (!id) return;\n\n    // show holding spinner where we'd show the recipe section\n    recipeView.renderSpinner();\n\n    // update results view to mark selected recipe\n    resultsView.update(model.getSearchResultsPage());\n    bookmarksView.update(model.state.bookmarks);\n\n    // loadRecipe = async fn\n    await model.loadRecipe(id);\n\n    // pass the live state genrated from loadRecipe()\n    recipeView.render(model.state.recipe);\n  } catch (err) {\n    // the controller will be the link between the errors from the model to the view for loadRecipe() if failed just above\n    recipeView.renderError();\n  }\n};\n\nconst controlSearchResults = async function () {\n  try {\n    resultsView.renderSpinner();\n\n    // get search query\n    const query = searchView.getQuery();\n    if (!query) return;\n\n    // store data in to the state\n    await model.loadSearchResults(query);\n\n    // render results\n    resultsView.render(model.getSearchResultsPage());\n\n    // render initial pagination btns\n    paginationView.render(model.state.search);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst controlPagination = function (goToPage) {\n  // render NEW results\n  resultsView.render(model.getSearchResultsPage(goToPage));\n\n  // render NEW btns\n  paginationView.render(model.state.search);\n};\n\nconst controlServings = function (newServings) {\n  // update the recipe servings (in state)\n  model.updateServings(newServings);\n\n  // update the recipe view\n  recipeView.update(model.state.recipe);\n};\n\nconst controlBookmark = function () {\n  // we have not yet bookmarked into our state\n  if (!model.state.recipe.bookmarked) model.addBookmarks(model.state.recipe);\n  // we have bookmarked into our state\n  else model.deleteBookmark(model.state.recipe.id);\n\n  recipeView.update(model.state.recipe);\n\n  bookmarksView.render(model.state.bookmarks);\n};\n\nconst controlBookmarks = function () {\n  // when the page re-loads check for bookmarks\n  bookmarksView.render(model.state.bookmarks);\n};\n\nconst controlAddRecipe = async function (newRecipe) {\n  try {\n    addRecipeView.renderSpinner();\n\n    await model.uploadRecipe(newRecipe);\n    console.log(model.state.recipe);\n\n    recipeView.render(model.state.recipe);\n\n    addRecipeView.renderMsg();\n\n    bookmarksView.render(model.state.bookmarks);\n\n    window.history.pushState(null, '', `#${model.state.recipe.id}`);\n\n    setTimeout(function () {\n      addRecipeView.toggleWindow();\n    }, 2500);\n  } catch (err) {\n    addRecipeView.renderError(err.message);\n  }\n};\n\n// start program\nconst init = function () {\n  // run addHandlerRender\n  // Event Handlers in MVC: Publisher-Subscriber Pattern - pass the Subscriber to the publisher\n  // Subscriber = controlRecipes - IN THE CONTROLLER\n  // Publisher = addHandlerRender - IN THE VIEW\n  bookmarksView.addHandlerRender(controlBookmarks);\n  recipeView.addHandlerRender(controlRecipes);\n  recipeView.addHandlerUpdateServings(controlServings);\n  recipeView.addHandlerBookmark(controlBookmark);\n  searchView.addHandlerSearch(controlSearchResults);\n  paginationView.addHandlerClick(controlPagination);\n  addRecipeView.addHandlerUpload(controlAddRecipe);\n\n  // In english - execute these fn's on startup that live in the views and pass in these controller functions.\n  // When they are executed in the view, they will have in them event listeners that will then take on the controller function that we passed in... on an event, call this controller function = handler\n};\ninit();\n","import { API_URL, RES_PER_PAGE, KEY } from './config';\r\nimport { AJAX } from './helpers';\r\n\r\n// state.recipe will get updated by the loadRecipe()\r\nexport const state = {\r\n  recipe: {},\r\n  search: {\r\n    // start of as defaults\r\n    query: '',\r\n    results: [],\r\n    page: 1,\r\n    resultsPerPage: RES_PER_PAGE,\r\n  },\r\n  bookmarks: [],\r\n};\r\n\r\nconst createRecipeObject = function (data) {\r\n  // detructure into recipe from data.data\r\n  const { recipe } = data.data;\r\n\r\n  // re-build the recipe obj into state.recipe obj (our live state) from recipe to get rid of props with _\r\n  return {\r\n    id: recipe.id,\r\n    title: recipe.title,\r\n    publisher: recipe.publisher,\r\n    sourceUrl: recipe.source_url,\r\n    image: recipe.image_url,\r\n    servings: recipe.servings,\r\n    cookingTime: recipe.cooking_time,\r\n    ingredients: recipe.ingredients,\r\n    ...(recipe.key && { key: recipe.key }),\r\n  };\r\n};\r\n\r\nexport const loadRecipe = async function (id) {\r\n  try {\r\n    // this will be the 'resolved' VALUE becasue we are returning the data from the async AJAX()\r\n    const data = await AJAX(`${API_URL}${id}?key=${KEY}`);\r\n    state.recipe = createRecipeObject(data);\r\n\r\n    // if any of the bookedmarked recipe id === id\r\n    if (state.bookmarks.some(RecipeBookmarked => RecipeBookmarked.id === id))\r\n      state.recipe.bookmarked = true;\r\n    else state.recipe.bookmarked = false;\r\n  } catch (err) {\r\n    // need to re-throw err so it can get sent down to controller recipeView.renderError(); in the catch block of controlRecipes so it can be presented in the view\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const loadSearchResults = async function (qry) {\r\n  // called by the controller - will tell this function what to search for\r\n\r\n  state.search.query = qry;\r\n\r\n  try {\r\n    const data = await AJAX(`${API_URL}?search=${qry}&key=${KEY}`);\r\n\r\n    state.search.results = data.data.recipes.map(rec => {\r\n      return {\r\n        id: rec.id,\r\n        title: rec.title,\r\n        publisher: rec.publisher,\r\n        image: rec.image_url,\r\n        ...(rec.key && { key: rec.key }),\r\n      };\r\n    });\r\n\r\n    // after a new search always re-set the page btns back to page 1\r\n    state.search.page = 1;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getSearchResultsPage = function (page = state.search.page) {\r\n  state.search.page = page;\r\n\r\n  // 10 is the amount we want to show\r\n  // if we requested page 1, 1-1=0 so 0*10=0..... so start will now be 0\r\n  const start = (page - 1) * state.search.resultsPerPage; //0;\r\n\r\n  // if we requested page 1, 1*10=10, slice will take 9\r\n  const end = page * state.search.resultsPerPage; //9;\r\n  return state.search.results.slice(start, end);\r\n\r\n  // if page is 2, 2-1=1*10=10.........start is 10\r\n  // 2*10= 20... end 20\r\n};\r\n\r\nexport const updateServings = function (newServings) {\r\n  state.recipe.ingredients.forEach(ing => {\r\n    ing.quantity = (ing.quantity * newServings) / state.recipe.servings;\r\n  });\r\n\r\n  state.recipe.servings = newServings;\r\n};\r\n\r\nconst persistBookmarks = function () {\r\n  localStorage.setItem('bookmarks', JSON.stringify(state.bookmarks));\r\n};\r\n\r\nexport const addBookmarks = function (recipe) {\r\n  // add bookmarks\r\n  state.bookmarks.push(recipe);\r\n\r\n  // mark current recipe as bookmark: set new prop on state\r\n  if (recipe.id === state.recipe.id) state.recipe.bookmarked = true;\r\n\r\n  persistBookmarks();\r\n};\r\n\r\nexport const deleteBookmark = function (id) {\r\n  // loop over and find the index with the id\r\n  const index = state.bookmarks.findIndex(el => el.id === id);\r\n  // delete 1 from this index\r\n  state.bookmarks.splice(index, 1);\r\n\r\n  // mark current recipe as un-bookmark: set new prop on state\r\n  if (id === state.recipe.id) state.recipe.bookmarked = false;\r\n\r\n  persistBookmarks();\r\n};\r\n\r\nconst init = function () {\r\n  const storage = localStorage.getItem('bookmarks');\r\n  if (storage) state.bookmarks = JSON.parse(storage);\r\n};\r\n\r\nconst clearBookmarks = function () {\r\n  localStorage.clear('bookmarks');\r\n};\r\n//clearBookmarks();\r\n\r\ninit();\r\n\r\nexport const uploadRecipe = async function (newRecipe) {\r\n  try {\r\n    const ingredients = Object.entries(newRecipe)\r\n      .filter(entry => entry[0].startsWith('ingredient') && entry[1] !== '')\r\n      .map(ing => {\r\n        const ingArr = ing[1].split(',').map(el => el.trim());\r\n\r\n        if (ingArr.length !== 3) {\r\n          throw new Error('ingredient format incorrect');\r\n        }\r\n\r\n        const [quantity, unit, description] = ingArr;\r\n\r\n        return { quantity: quantity ? +quantity : null, unit, description };\r\n      });\r\n\r\n    const recipe = {\r\n      title: newRecipe.title,\r\n      source_url: newRecipe.sourceUrl,\r\n      image_url: newRecipe.image,\r\n      publisher: newRecipe.publisher,\r\n      cooking_time: +newRecipe.cookingTime,\r\n      servings: +newRecipe.servings,\r\n      ingredients,\r\n    };\r\n\r\n    const data = await AJAX(`${API_URL}?key=${KEY}`, recipe);\r\n    state.recipe = createRecipeObject(data);\r\n    addBookmarks(state.recipe);\r\n  } catch (err) {\r\n    // re throw it so it propagate up to when returning the await on uploadRecipe\r\n    throw err;\r\n  }\r\n};\r\n","// vars to be used across all files regarding applicaton itself\r\n\r\nexport const API_URL = 'https://forkify-api.herokuapp.com/api/v2/recipes/';\r\nexport const TIMEOUT_SECONDS = 10;\r\nexport const RES_PER_PAGE = 10;\r\nexport const KEY = 'b9709f71-c57a-4a96-9c67-2c3e84585f16';\r\n","import { TIMEOUT_SECONDS } from './config';\r\n\r\nconst timeout = function (s) {\r\n  return new Promise(function (_, reject) {\r\n    setTimeout(function () {\r\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\r\n    }, s * 1000);\r\n  });\r\n};\r\n\r\n// a helper to perform an async fetch/post\r\nexport const AJAX = async function (url, uploadData = undefined) {\r\n  try {\r\n    const fetchPro = uploadData\r\n      ? fetch(url, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(uploadData),\r\n        })\r\n      : fetch(url);\r\n\r\n    // the fetch will return a promis as per normal\r\n    // we can then await the result of the promise\r\n    // using Promise.race to see which promise (fetch or timeout) wins the race 1st\r\n    const res = await Promise.race([fetchPro, timeout(TIMEOUT_SECONDS)]);\r\n    // convert the res obj from the returned fetch to json and this will return a promise then await on that\r\n    const data = await res.json();\r\n\r\n    // if false - grab the msg from the data - will be passed to the catch err handler\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    // instead of returning a prmoise from this async fn, we need to return the data as the value\r\n    // this will be the 'resolved' VALUE of the promise that the getJSON() returns - not the promise itself\r\n    return data;\r\n  } catch (err) {\r\n    // pass the err down to model.js not here\r\n    throw err;\r\n  }\r\n};\r\n","import View from './View.js';\r\nimport icons from 'url:../../img/icons.svg';\r\n\r\nclass RecipeView extends View {\r\n  _parentElement = document.querySelector('.recipe');\r\n  _errorMsg = 'Could not find recipe, please try again';\r\n  _msg = '';\r\n\r\n  addHandlerRender(handler) {\r\n    // handler == controlRecipes fron controller\r\n    ['hashchange', 'load'].forEach(event =>\r\n      window.addEventListener(event, handler)\r\n    );\r\n\r\n    //window.addEventListener('hashchange', handler);\r\n    //window.addEventListener('load', handler);\r\n  }\r\n\r\n  addHandlerUpdateServings(handler) {\r\n    this._parentElement.addEventListener('click', function (e) {\r\n      const btn = e.target.closest('.btn--update-servings');\r\n      if (!btn) return;\r\n\r\n      const { updateTo } = btn.dataset;\r\n      if (+updateTo > 0) handler(+updateTo);\r\n    });\r\n  }\r\n\r\n  addHandlerBookmark(handler) {\r\n    this._parentElement.addEventListener('click', function (e) {\r\n      // listen to event on the parent el\r\n      const btn = e.target.closest('.btn--bookmark');\r\n      if (!btn) return;\r\n\r\n      handler();\r\n    });\r\n  }\r\n\r\n  _generateMarkup() {\r\n    return `\r\n      <figure class=\"recipe__fig\">\r\n        <img src=\"${this._data.image}\" alt=\"${\r\n      this._data.title\r\n    }\" class=\"recipe__img\" />\r\n        <h1 class=\"recipe__title\">\r\n          <span>${this._data.title}</span>\r\n        </h1>\r\n      </figure>\r\n\r\n      <div class=\"recipe__details\">\r\n        <div class=\"recipe__info\">\r\n          <svg class=\"recipe__info-icon\">\r\n            <use href=\"${icons}#icon-clock\"></use>\r\n          </svg>\r\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${\r\n            this._data.cookingTime\r\n          }</span>\r\n          <span class=\"recipe__info-text\">minutes</span>\r\n        </div>\r\n        <div class=\"recipe__info\">\r\n          <svg class=\"recipe__info-icon\">\r\n            <use href=\"${icons}#icon-users\"></use>\r\n          </svg>\r\n          <span class=\"recipe__info-data recipe__info-data--people\">${\r\n            this._data.servings\r\n          }</span>\r\n          <span class=\"recipe__info-text\">servings</span>\r\n\r\n          <div class=\"recipe__info-buttons\">\r\n            <button class=\"btn--tiny btn--update-servings\" data-update-to=\"${\r\n              this._data.servings - 1\r\n            }\">\r\n              <svg>\r\n                <use href=\"${icons}#icon-minus-circle\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn--tiny btn--update-servings\" data-update-to=\"${\r\n              this._data.servings + 1\r\n            }\">\r\n              <svg>\r\n                <use href=\"${icons}#icon-plus-circle\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"recipe__user-generated ${this._data.key ? '' : ' hidden'}\">\r\n          <svg>\r\n            <use href=\"${icons}#icon-user\"></use>\r\n          </svg>\r\n        </div>\r\n        <button class=\"btn--round btn--bookmark\">\r\n          <svg class=\"\">\r\n            <use href=\"${icons}#icon-bookmark${\r\n      this._data.bookmarked ? '-fill' : ''\r\n    }\"></use>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"recipe__ingredients\">\r\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\r\n        <ul class=\"recipe__ingredient-list\">\r\n            ${this._data.ingredients\r\n              .map(this._generateMarkupIngredient)\r\n              .join('')}\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"recipe__directions\">\r\n        <h2 class=\"heading--2\">How to cook it</h2>\r\n        <p class=\"recipe__directions-text\">\r\n          This recipe was carefully designed and tested by\r\n          <span class=\"recipe__publisher\">${\r\n            this._data.publisher\r\n          }</span>. Please check out\r\n          directions at their website.\r\n        </p>\r\n        <a\r\n          class=\"btn--small recipe__btn\"\r\n          href=\"${this._data.sourceUrl}\"\r\n          target=\"_blank\"\r\n        >\r\n          <span>Directions</span>\r\n          <svg class=\"search__icon\">\r\n            <use href=\"${icons}#icon-arrow-right\"></use>\r\n          </svg>\r\n        </a>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  _generateMarkupIngredient(ing) {\r\n    // generateMarkupIngredient is a callback passed to the map method\r\n    // map normally takes (el,c,arr) in this case just the el\r\n    // this._data.ingredients is an array of objs\r\n    // we need to return a string of html for this ingredient section\r\n    // map in this case will return the same length array\r\n    // in each elemet which is a obj is ing will now be one of these li's\r\n    // from the result of the map (an array) we then join them in one big html string\r\n\r\n    return `\r\n          <li class=\"recipe__ingredient\">\r\n            <svg class=\"recipe__icon\">\r\n              <use href=\"${icons}#icon-check\"></use>\r\n            </svg>\r\n            <div class=\"recipe__quantity\">${\r\n              ing.quantity ? ing.quantity : ''\r\n            }</div>\r\n            <div class=\"recipe__description\">\r\n              <span class=\"recipe__unit\">${ing.unit}</span>\r\n              ${ing.description}\r\n            </div>\r\n          </li>\r\n          `;\r\n  }\r\n}\r\n\r\nexport default new RecipeView();\r\n","import icons from 'url:../../img/icons.svg';\r\n\r\n// never instantuated, only using it as a parent class for all other\r\nexport default class View {\r\n  _data;\r\n\r\n  render(data, render = true) {\r\n    // if no data or if data is array && array is empty\r\n    if (!data || (Array.isArray(data) && data.length === 0))\r\n      return this.renderError();\r\n\r\n    this._data = data;\r\n    const markup = this._generateMarkup();\r\n\r\n    if (!render) return markup;\r\n\r\n    this._clear();\r\n    // afterbegin = first child recipeContainer div\r\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\r\n  }\r\n\r\n  update(data) {\r\n    this._data = data;\r\n\r\n    // GENRATE NEW MARKUP BUT NOT RENDER IT, COMPARE NEW HTML TO CUR HTML\r\n    // CHANGE TEXT AND ATTRIBUTES THAT HAVE CHNAGED FROM OLD TO NEW VERSION\r\n    const newMarkup = this._generateMarkup();\r\n\r\n    // convert string to DOM obj (living in memory) then we can use to compare to the actual DOM on the page\r\n    // newDom = virtual DOM\r\n    const newDom = document.createRange().createContextualFragment(newMarkup);\r\n    const newElements = Array.from(newDom.querySelectorAll('*'));\r\n    const curElements = Array.from(this._parentElement.querySelectorAll('*'));\r\n\r\n    newElements.forEach((newEl, i) => {\r\n      const curEl = curElements[i];\r\n\r\n      // chnage the text\r\n      if (\r\n        !newEl.isEqualNode(curEl) &&\r\n        newEl.firstChild?.nodeValue.trim() !== ''\r\n      ) {\r\n        curEl.textContent = newEl.textContent;\r\n      }\r\n\r\n      // change the attr\r\n      if (!newEl.isEqualNode(curEl)) {\r\n        Array.from(newEl.attributes).forEach(attr =>\r\n          curEl.setAttribute(attr.name, attr.value)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  _clear() {\r\n    // empty the recipeContainer div\r\n    this._parentElement.innerHTML = '';\r\n  }\r\n\r\n  // ## render a spinner for an async task\r\n  renderSpinner() {\r\n    const markup = `\r\n    <div class=\"spinner\">\r\n      <svg>\r\n        <use href=\"${icons}#icon-loader\"></use>\r\n      </svg>\r\n    </div>\r\n    `;\r\n    this._clear();\r\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\r\n  }\r\n\r\n  renderError(msg = this._errorMsg) {\r\n    const markup = `\r\n        <div class=\"error\">\r\n            <div>\r\n            <svg>\r\n                <use href=\"${icons}#icon-alert-triangle\"></use>\r\n            </svg>\r\n            </div>\r\n            <p>${msg}</p>\r\n        </div>\r\n        `;\r\n    this._clear();\r\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\r\n  }\r\n\r\n  renderMsg(msg = this._msg) {\r\n    const markup = `\r\n        <div class=\"message\">\r\n            <div>\r\n            <svg>\r\n                <use href=\"${icons}#icon-alert-smile\"></use>\r\n            </svg>\r\n            </div>\r\n            <p>${msg}</p>\r\n        </div>\r\n        `;\r\n    this._clear();\r\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\r\n  }\r\n}\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eyyUD\")).toString();","class SearchView {\r\n  // .search is the form\r\n  _parentElement = document.querySelector('.search');\r\n\r\n  getQuery() {\r\n    const query = this._parentElement.querySelector('.search__field').value;\r\n    this._clearInput();\r\n    return query;\r\n  }\r\n\r\n  _clearInput() {\r\n    return (this._parentElement.querySelector('.search__field').value = '');\r\n  }\r\n\r\n  addHandlerSearch(handler) {\r\n    // user clicks submit btn or submits form\r\n    this._parentElement.addEventListener('submit', function (e) {\r\n      e.preventDefault();\r\n      handler();\r\n    });\r\n  }\r\n}\r\n\r\nexport default new SearchView();\r\n","import icons from 'url:../../img/icons.svg';\r\nimport previewView from './previewView';\r\nimport View from './View';\r\n\r\nclass ResultsView extends View {\r\n  _parentElement = document.querySelector('.results');\r\n  _errorMsg = 'No recipes found';\r\n  _msg = '';\r\n\r\n  _generateMarkup() {\r\n    return this._data.map(result => previewView.render(result, false)).join('');\r\n  }\r\n}\r\n\r\n// this way there can only be 1 results view and then imported into controller\r\nexport default new ResultsView();\r\n","import icons from 'url:../../img/icons.svg';\r\nimport View from './View';\r\n\r\nclass PreviewView extends View {\r\n  _parentElement = '';\r\n\r\n  _generateMarkup(result) {\r\n    // 1st el after the hash\r\n    const id = window.location.hash.slice(1);\r\n\r\n    return `\r\n    <li class=\"preview\">\r\n        <a class=\"preview__link\" ${\r\n          this._data.id === id ? 'preview__link--active' : ''\r\n        } href=\"#${this._data.id}\">\r\n        <figure class=\"preview__fig\">\r\n            <img src=\"${this._data.image}\" alt=\"${this._data.title}\" />\r\n        </figure>\r\n        <div class=\"preview__data\">\r\n            <h4 class=\"preview__title\">${this._data.title}</h4>\r\n            <p class=\"preview__publisher\">${this._data.publisher}</p>\r\n            <div class=\"preview__user-generated ${\r\n              this._data.key ? '' : ' hidden'\r\n            }\">\r\n              <svg>\r\n                <use href=\"${icons}#icon-user\"></use>\r\n              </svg>\r\n            </div>\r\n        </div>\r\n        </a>\r\n    </li>\r\n    `;\r\n  }\r\n}\r\n\r\n// this way there can only be 1 results view and then imported into controller\r\nexport default new PreviewView();\r\n","import icons from 'url:../../img/icons.svg';\r\nimport View from './View';\r\n\r\nclass PaginationView extends View {\r\n  _parentElement = document.querySelector('.pagination');\r\n\r\n  addHandlerClick(handler) {\r\n    this._parentElement.addEventListener('click', function (e) {\r\n      // figure out which btn was clisked using event delegation\r\n      // select the closest btn element to the clicked element\r\n      // closest() works like querySelecter but searches up in the tree, looks for parents\r\n      // becuase we might click on the span, svg or the use that's within the button\r\n      const btn = e.target.closest('.btn--inline');\r\n      if (!btn) return; // if we click in the div .pagination\r\n\r\n      const goToPage = +btn.dataset.goto;\r\n\r\n      handler(goToPage);\r\n    });\r\n  }\r\n\r\n  _generateMarkup() {\r\n    const curPage = this._data.page;\r\n\r\n    // number of pages\r\n    const numPages = Math.ceil(\r\n      // e.g 60 arrays / by 10 = 6 pages\r\n      this._data.results.length / this._data.resultsPerPage\r\n    );\r\n\r\n    // if we are on page 1, and there are OTHER pages >\r\n    if (curPage === 1 && numPages > 1) {\r\n      return `\r\n        <button data-goto=\"${\r\n          curPage + 1\r\n        }\" class=\"btn--inline pagination__btn--next\">\r\n            <span>Page ${curPage + 1}</span>\r\n            <svg class=\"search__icon\">\r\n                <use href=\"${icons}#icon-arrow-right\"></use>\r\n            </svg>\r\n        </button>\r\n        `;\r\n    }\r\n\r\n    // if we are on last page\r\n    if (curPage === numPages && numPages > 1) {\r\n      return `\r\n        <button data-goto=\"${\r\n          curPage - 1\r\n        }\" class=\"btn--inline pagination__btn--prev\">\r\n            <svg class=\"search__icon\">\r\n            <use href=\"${icons}#icon-arrow-left\"></use>\r\n            </svg>\r\n            <span>Page ${curPage - 1}</span>\r\n        </button>\r\n        `;\r\n    }\r\n\r\n    // other page\r\n    if (curPage < numPages) {\r\n      return `\r\n        <button data-goto=\"${\r\n          curPage - 1\r\n        }\" class=\"btn--inline pagination__btn--prev\">\r\n            <svg class=\"search__icon\">\r\n            <use href=\"${icons}#icon-arrow-left\"></use>\r\n            </svg>\r\n            <span>Page ${curPage - 1}</span>\r\n        </button>\r\n        <button data-goto=\"${\r\n          curPage + 1\r\n        }\" class=\"btn--inline pagination__btn--next\">\r\n            <span>Page ${curPage + 1}</span>\r\n            <svg class=\"search__icon\">\r\n                <use href=\"${icons}#icon-arrow-right\"></use>\r\n            </svg>\r\n        </button>\r\n        `;\r\n    }\r\n\r\n    // page 1, and there are NO other pages\r\n    return '';\r\n  }\r\n}\r\n\r\nexport default new PaginationView();\r\n","import icons from 'url:../../img/icons.svg';\r\nimport View from './View';\r\nimport previewView from './previewView';\r\n\r\nclass BookmarksView extends View {\r\n  _parentElement = document.querySelector('.bookmarks__list');\r\n  _errorMsg = 'No bookmarks yet';\r\n  _msg = '';\r\n\r\n  addHandlerRender(handler) {\r\n    window.addEventListener('load', handler);\r\n  }\r\n\r\n  _generateMarkup() {\r\n    return this._data\r\n      .map(bookmark => previewView.render(bookmark, false))\r\n      .join('');\r\n  }\r\n}\r\n\r\n// this way there can only be 1 results view and then imported into controller\r\nexport default new BookmarksView();\r\n","import icons from 'url:../../img/icons.svg';\r\nimport View from './View';\r\n\r\nclass AddRecipeView extends View {\r\n  _parentElement = document.querySelector('.upload');\r\n  _msg = 'Recipe added';\r\n\r\n  _window = document.querySelector('.add-recipe-window');\r\n  _overlay = document.querySelector('.overlay');\r\n  _btnOpen = document.querySelector('.nav__btn--add-recipe');\r\n  _btnClose = document.querySelector('.btn--close-modal');\r\n\r\n  // call _addHandlerShowWindow soon as we instatiate this class\r\n  constructor() {\r\n    super();\r\n    this._addHandlerShowWindow();\r\n    this._addHandlerHideWindow();\r\n  }\r\n\r\n  toggleWindow() {\r\n    this._overlay.classList.toggle('hidden');\r\n    this._window.classList.toggle('hidden');\r\n  }\r\n\r\n  _addHandlerShowWindow() {\r\n    this._btnOpen.addEventListener('click', this.toggleWindow.bind(this));\r\n  }\r\n\r\n  _addHandlerHideWindow() {\r\n    this._btnClose.addEventListener('click', this.toggleWindow.bind(this));\r\n    this._overlay.addEventListener('click', this.toggleWindow.bind(this));\r\n  }\r\n\r\n  addHandlerUpload(handler) {\r\n    this._parentElement.addEventListener('submit', function (e) {\r\n      e.preventDefault();\r\n      // the this keyword points to the form event handler\r\n      const dataArr = [...new FormData(this)];\r\n      // ES 2019 convert the FormData to an obj\r\n      const dataObj = Object.fromEntries(dataArr);\r\n      handler(dataObj);\r\n    });\r\n  }\r\n\r\n  _generateMarkup() {}\r\n}\r\n\r\nexport default new AddRecipeView();\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","i","length","resolved","JSON","parse","$ba30e20475feac5a$export$923ea8233b386e99","$ba30e20475feac5a$export$7167c830cefcb6b5","$bd02c871d9c5ba8e$export$2b3ff41fecbef7c8","url","uploadData","fetchPro","fetch","method","headers","body","stringify","res","Promise","race","_","reject","setTimeout","data","json","ok","message","status","$0f1d4402dffacf5b$export$ca000e230c0caa3e","recipe","search","query","results","page","resultsPerPage","bookmarks","$0f1d4402dffacf5b$var$createRecipeObject","title","publisher","sourceUrl","source_url","image","image_url","servings","cookingTime","cooking_time","ingredients","key","$0f1d4402dffacf5b$export$b96725c7a035d60b","some","RecipeBookmarked","bookmarked","$0f1d4402dffacf5b$export$202b8e5cb363a0c4","qry","recipes","map","rec","$0f1d4402dffacf5b$export$8d7f79465139ab72","start","end","slice","$0f1d4402dffacf5b$export$5e23f4642ecad5ea","newServings","forEach","ing","quantity","$0f1d4402dffacf5b$var$persistBookmarks","localStorage","setItem","$0f1d4402dffacf5b$export$9810234b614cab40","push","$0f1d4402dffacf5b$export$136048bcb9946c75","index","findIndex","el","splice","$0f1d4402dffacf5b$var$init","storage","getItem","$0f1d4402dffacf5b$export$d660c2254e74960d","newRecipe","entries","filter","entry","startsWith","ingArr","split","trim","unit","description","$d981731ada74638f$exports","URL","resolve","toString","$3a07c34e115c11c9$export$2e2bcd8739ae039","_data","render","Array","isArray","renderError","markup","_generateMarkup","_clear","_parentElement","insertAdjacentHTML","update","newMarkup","newDom","document","createRange","createContextualFragment","newElements","from","querySelectorAll","curElements","newEl","curEl","isEqualNode","firstChild","nodeValue","textContent","attributes","attr","setAttribute","name","value","innerHTML","renderSpinner","msg","_errorMsg","renderMsg","_msg","$d14dc0f178617192$var$RecipeView","querySelector","addHandlerRender","handler","event","addEventListener","addHandlerUpdateServings","btn","target","closest","updateTo","dataset","addHandlerBookmark","_generateMarkupIngredient","join","$d14dc0f178617192$export$2e2bcd8739ae039","$813cf99795e9ec97$var$SearchView","getQuery","_clearInput","addHandlerSearch","preventDefault","$813cf99795e9ec97$export$2e2bcd8739ae039","$a68ceb92eae160df$export$2e2bcd8739ae039","result","location","hash","$dddbd0b30676c4ae$var$ResultsView","$dddbd0b30676c4ae$export$2e2bcd8739ae039","$cfa940594ee109f7$var$PaginationView","addHandlerClick","goToPage","goto","curPage","numPages","Math","ceil","$cfa940594ee109f7$export$2e2bcd8739ae039","$5d1bb7e064b2cbd1$var$BookmarksView","bookmark","$5d1bb7e064b2cbd1$export$2e2bcd8739ae039","$e5dc5dc5ede8bdf4$var$AddRecipeView","_window","_overlay","_btnOpen","_btnClose","constructor","_addHandlerShowWindow","_addHandlerHideWindow","toggleWindow","classList","toggle","bind","addHandlerUpload","dataArr","FormData","dataObj","fromEntries","$e5dc5dc5ede8bdf4$export$2e2bcd8739ae039","$f50bd1f2915ed0f2$var$controlRecipes","$f50bd1f2915ed0f2$var$controlSearchResults","console","log","$f50bd1f2915ed0f2$var$controlAddRecipe","history","pushState"],"version":3,"file":"index.5a270239.js.map"}